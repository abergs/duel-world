{"version":3,"sources":["features/nav/navSlice.ts","features/questions/roundSlice.ts","components/wptr.js","components/usePull.tsx","screen.tsx","WelcomeWizard.tsx","classNames.ts","features/questions/alternative.tsx","useSelector.ts","features/sound.ts","components/button.tsx","features/questions/answerScreen.tsx","QuestionScreen.tsx","features/questions/roundScreen.tsx","features/duels/duelsScreen.tsx","features/duels/newDuelScreen.tsx","Game.tsx","App.tsx","assets/button1.mp3","assets/button2.mp3","assets/tickHorror.mp3","assets/bubbleNegative.mp3","assets/errorbuzz.mp3","assets/chime.mp3","assets/bubbles.mp3","assets/fart.mp3","assets/fart2.mp3","serviceWorker.js","rootReducer.ts","store.ts","index.js"],"names":["navSlice","createSlice","name","initialState","path","reducers","setPath","state","action","payload","console","log","window","history","pushState","extraReducers","answerQuestion","type","nextQuestion","actions","countries","capitals","map","x","City","Country","createCapitalOfQuestion","q","getRandomly","template","alternatives","createAlt","array","i","length","j","Math","floor","random","shuffleArray","id","text","time","points","myArray","roundSlice","roundId","questions","answers","currentQuestion","myScore","status","startRound","push","finalQ","alternative","noop","WebPullToRefresh","h","defaults","contentEl","ptrEl","bodyEl","document","body","distanceToRefresh","callback","resistance","progressCallback","classNames","waiting","ready","resetting","active","options","pan","enabled","distance","startingPositionY","bodyClass","classList","_panStart","e","scrollTop","_panDown","preventDefault","_setContentPan","_setBodyClass","_panUp","style","transform","webkitTransform","add","remove","_panEnd","contains","_doLoading","_doReset","loadingPromise","setTimeout","then","addEventListener","bodyClassRemove","removeEventListener","init","params","Hammer","hammerOptions","get","set","direction","DIRECTION_VERTICAL","on","unload","destroy","usePull","props","wrapper","useRef","indicator","content","useEffect","wpr","current","Screen","Promise","resolve","p","d","documentElement","setProperty","min","toString","className","ref","children","WelcomeWizard","useState","setName","setPlay","dispatch","useDispatch","placeholder","value","onChange","target","onClick","classnames","obj","Object","entries","k","join","Box","posed","div","enter","opacity","y","exit","Alternative","isMine","isCorrect","key","useSelector","useReduxSelector","beep1","Howl","src","beepMp3","beep2","beep2Mp3","tickHorror","tickHorrorMp3","errorbuzz","errorbuzzMp3","popNegative","bubbleNegativeMp3","chime","chimeMp3","bubbles","bubblesmp3","volume","fart","fartmp3","fart2","fart2mp3","Button","footer","play","delay","duration","staggerChildren","AnswerScreen","round","question","myAnswer","animateOnMount","mine","NO_ALTERNATIVE","throttle","func","limit","inThrottle","args","arguments","context","this","apply","beep","horror","QuestionScreen","seconds","setSeconds","savedCallback","setInterval","clearInterval","useInterval","ceilSeconds","ceil","getRandomInt","max","RoundScreen","innerWidth","innerHeight","xy","setxy","recycle","setrecycle","useDebouncedCallback","debouncedCallback","clientX","clientY","tweenDuration","numberOfPieces","confettiSource","w","DuelsScreen","NewDuelScreen","Game","nav","App","module","exports","Boolean","location","hostname","match","rootReducer","combineReducers","navReducer","roundReducer","store","configureStore","reducer","onpopstate","event","JSON","stringify","vh","require","default","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.894c0c53.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from 'redux-starter-kit'\r\n\r\nimport { answerQuestion,nextQuestion } from \"features/questions/roundSlice\";\r\nimport store from 'store';\r\n\r\n\r\n\r\nconst navSlice = createSlice({\r\n    name: 'nav',\r\n    initialState: { path: 'init' },    \r\n    reducers: {\r\n        setPath: (state, action) => {\r\n                const path = action.payload;\r\n                state.path = path;\r\n                console.log(\"state\", path);\r\n                window.history.pushState(path, \"\",\"#\" + path)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [answerQuestion.type]: (state, action) => {\r\n            state.path = \"answer\";\r\n        },\r\n        [nextQuestion.type]: (state, action) => {\r\n            state.path = \"question\";\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setPath } = navSlice.actions\r\n\r\nexport default navSlice.reducer;\r\n\r\n\r\n","import { createSlice, PayloadAction, createSelector } from \"redux-starter-kit\";\r\nimport { string } from \"prop-types\";\r\nimport QuestionScreen from \"QuestionScreen\";\r\nimport { useSelector } from \"react-redux\";\r\nimport capitals from \"assets/capitals.json\";\r\n\r\nconst cities = capitals.map(x => x.City);\r\nconst countries = capitals.map(x => x.Country);\r\n\r\n// const cap2 = capitals.filter(x => x.City && x.Country).map(x => {return { City: x.City, Country: x.Country  }});\r\n// console.log(JSON.stringify(cap2));\r\n\r\n\r\nfunction shuffleArray(array:any[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\n// create questions \r\nfunction createCapitalOfQuestion() {\r\n\r\n  const q = getRandomly(capitals);\r\n\r\n  const template = \"In what country is \" + q.City + \" the capital?\"\r\n\r\n  // const correctAlt = q;\r\n  let alternatives = [\r\n    createAlt(getRandomly(countries)),\r\n    createAlt(getRandomly(countries)),\r\n    createAlt(getRandomly(countries)),\r\n    createAlt(q.Country, 5)\r\n  ];\r\n\r\n  shuffleArray(alternatives);\r\n\r\n  var output: IQuestion = {\r\n    id: template,\r\n    text: template,\r\n    time: 10,\r\n    type: \"capitalof\",\r\n    alternatives: alternatives\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction createAlt(text: string, points?: number): IAlternative {\r\n  return {\r\n    text: text,\r\n    points: points || 0\r\n  }\r\n}\r\n\r\nfunction getRandomly(myArray:any[]) {\r\n  var rand = myArray[Math.floor(Math.random() * myArray.length)];\r\n  return rand;\r\n}\r\n\r\n\r\nconst alternatives = [\r\n  {\r\n    text: \"France\",\r\n    points: 0\r\n  },\r\n  {\r\n    text: \"Serbia\",\r\n    points: 0\r\n  },\r\n  {\r\n    text: \"Scotland\",\r\n    points: 0\r\n  },\r\n  {\r\n    text: \"Ireland\",\r\n    points: 5\r\n  }\r\n];\r\n\r\nexport interface IAlternative {\r\n  text: string;\r\n  points: number;\r\n}\r\n\r\nexport interface IAnswer {\r\n  correct: boolean;\r\n  alternative: IAlternative;\r\n}\r\n\r\nexport interface IQuestion {\r\n  id: string;\r\n  type: \"capitalof\" | \"countryof\";\r\n  text: string;\r\n  alternatives: IAlternative[];\r\n  time: number;\r\n}\r\n\r\nconst QUESTION: IQuestion = {\r\n  id: \"\",\r\n  type: \"countryof\",\r\n  text: \"In what country is Paris the capital?\",\r\n  alternatives: alternatives,\r\n  time: 10\r\n};\r\n\r\nexport interface IRoundState {\r\n  roundId: string;\r\n  questions: IQuestion[];\r\n  currentQuestion: number;\r\n  status: \"not-started\" | \"started\" | \"finished\" | \"answered\";\r\n  myScore: number;\r\n  answers: { [question: string]: { [player: string]: string } };\r\n}\r\n\r\nfunction cq(city: string): IQuestion {\r\n  return {\r\n    id: \"\",\r\n    type: \"countryof\",\r\n    text: \"In what country is \" + city + \" the capital?\",\r\n    alternatives: alternatives,\r\n    time: 10\r\n  };\r\n}\r\n\r\nconst initState: IRoundState = {\r\n  roundId: \"1\",\r\n  questions: [],\r\n  answers: {},\r\n  currentQuestion: 0,\r\n  myScore: 0,\r\n  status: \"not-started\"\r\n};\r\n\r\nconst roundSlice = createSlice({\r\n  name: \"round\",\r\n  initialState: initState,\r\n  reducers: {\r\n    startRound: state => {\r\n      state.status = \"started\";\r\n      state.currentQuestion = 0;\r\n      state.myScore = 0;\r\n\r\n      state.questions = [];\r\n      state.questions.push(createCapitalOfQuestion());\r\n      state.questions.push(createCapitalOfQuestion());\r\n      state.questions.push(createCapitalOfQuestion());\r\n      state.questions.push(createCapitalOfQuestion());\r\n      state.questions.push(createCapitalOfQuestion());\r\n\r\n    },\r\n    answerQuestion: (state, action) => {\r\n      const finalQ = state.questions.length - 1;\r\n      var alternative = action.payload as IAlternative;\r\n      var q = state.questions[state.currentQuestion];\r\n      const player = \"p1\";\r\n\r\n      if (!state.answers[q.text]) state.answers[q.text] = {};\r\n      state.answers[q.text][player] = alternative.text || \"\";\r\n\r\n      if (state.currentQuestion <= finalQ) {\r\n        state.myScore += alternative.points;\r\n      }\r\n\r\n      state.status = \"answered\";\r\n    },\r\n    nextQuestion: (state) => {\r\n      const finalQ = state.questions.length - 1;\r\n      if (state.currentQuestion == finalQ) {\r\n        state.status = \"finished\";\r\n      } else if (state.currentQuestion < finalQ) {\r\n        // next question\r\n        state.currentQuestion++;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { startRound, answerQuestion, nextQuestion } = roundSlice.actions;\r\n\r\nexport default roundSlice.reducer;\r\n","// @ts-nocheck\r\nimport Hammer from \"hammerjs\";\r\n\r\nconst noop = () => [];\r\n\r\nexport default function WebPullToRefresh() {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * Hold all of the default parameters for the module\r\n   * @type {object}\r\n   */\r\n  var defaults = {\r\n    // ID of the element holding pannable content area\r\n    contentEl: \"content\",\r\n\r\n    // ID of the element holding pull to refresh loading area\r\n    ptrEl: \"ptr\",\r\n\r\n    // wrapper element holding scollable\r\n    bodyEl: document.body,\r\n\r\n    // Number of pixels of panning until refresh\r\n    distanceToRefresh: 70,\r\n\r\n    // Pointer to function that does the loading and returns a promise\r\n    callback: false,\r\n\r\n    // Dragging resistance level\r\n    resistance: 2.5,\r\n\r\n    progressCallback: noop,\r\n\r\n    classNames: {\r\n      waiting: \"pull-waiting\",\r\n      ready: \"pull-ready\",\r\n      resetting: \"pull-resetting\",\r\n      active: \"pull-active\"\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Hold all of the merged parameter and default module options\r\n   * @type {object}\r\n   */\r\n  var options = {};\r\n\r\n  /**\r\n   * Pan event parameters\r\n   * @type {object}\r\n   */\r\n  var pan = {\r\n    enabled: false,\r\n    distance: 0,\r\n    startingPositionY: 0\r\n  };\r\n\r\n  /**\r\n   * Easy shortener for handling adding and removing body classes.\r\n   */\r\n  var bodyClass = defaults.bodyEl.classList;\r\n  var h;\r\n\r\n  /**\r\n   * Initialize pull to refresh, hammer, and bind pan events.\r\n   *\r\n   * @param {object=} params - Setup parameters for pull to refresh\r\n   */\r\n  var init = function(params) {\r\n    params = params || {};\r\n    options = {\r\n      ...defaults,\r\n      ...params\r\n      // contentEl: params.contentEl || document.getElementById( defaults.contentEl ),\r\n      // ptrEl: params.ptrEl || document.getElementById( defaults.ptrEl ),\r\n      // bodyEl: params.bodyEl || defaults.bodyEl,\r\n      // distanceToRefresh: params.distanceToRefresh || defaults.distanceToRefresh,\r\n      // callback: params.callback || defaults.callback,\r\n      // resistance: params.resistance || defaults.resistance,\r\n      // hammerOptions: params.hammerOptions || {},\r\n      // progress: params.progress || noop\r\n    };\r\n\r\n    console.log(options);\r\n\r\n    if (!options.contentEl || !options.ptrEl) {\r\n      return false;\r\n    }\r\n\r\n    console.log(\"bc\", options.bodyEl);\r\n    bodyClass = options.bodyEl.classList;\r\n\r\n    h = new Hammer(options.contentEl, options.hammerOptions);\r\n\r\n    h.get(\"pan\").set({ direction: Hammer.DIRECTION_VERTICAL });\r\n\r\n    h.on(\"panstart\", _panStart);\r\n    h.on(\"pandown\", _panDown);\r\n    h.on(\"panup\", _panUp);\r\n    h.on(\"panend\", _panEnd);\r\n  };\r\n\r\n  /**\r\n   * Determine whether pan events should apply based on scroll position on panstart\r\n   *\r\n   * @param {object} e - Event object\r\n   */\r\n  var _panStart = function(e) {\r\n    pan.startingPositionY = options.bodyEl.scrollTop;\r\n\r\n    if (pan.startingPositionY === 0) {\r\n      pan.enabled = true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle element on screen movement when the pandown events is firing.\r\n   *\r\n   * @param {object} e - Event object\r\n   */\r\n  var _panDown = function(e) {\r\n    if (!pan.enabled) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    pan.distance = e.distance / options.resistance;\r\n\r\n    options.progressCallback(\r\n      pan.distance / options.distanceToRefresh,\r\n      pan.distance\r\n    );\r\n\r\n    _setContentPan();\r\n    _setBodyClass();\r\n  };\r\n\r\n  /**\r\n   * Handle element on screen movement when the pandown events is firing.\r\n   *\r\n   * @param {object} e - Event object\r\n   */\r\n  var _panUp = function(e) {\r\n    console.log(\"PAN UP\");\r\n    if (!pan.enabled || pan.distance === 0) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    if (pan.distance < e.distance / options.resistance) {\r\n      // console.log(pd , e.distance / options.resistance )\r\n\r\n      console.log(\"reset\");\r\n      pan.distance = 0;\r\n    } else {\r\n      pan.distance = e.distance / options.resistance;\r\n    }\r\n\r\n    options.progressCallback(\r\n      pan.distance / options.distanceToRefresh,\r\n      pan.distance\r\n    );\r\n\r\n    _setContentPan();\r\n    _setBodyClass();\r\n  };\r\n\r\n  /**\r\n   * Set the CSS transform on the content element to move it on the screen.\r\n   */\r\n  var _setContentPan = function() {\r\n    // Use transforms to smoothly animate elements on desktop and mobile devices\r\n    options.contentEl.style.transform = options.contentEl.style.webkitTransform =\r\n      \"translate3d( 0, \" + pan.distance + \"px, 0 )\";\r\n\t\r\n\t//   options.ptrEl.style.transform = options.ptrEl.style.webkitTransform =\r\n    //   \"translate3d( 0, \" +\r\n    //   (pan.distance - options.ptrEl.offsetHeight) +\r\n    //   \"px, 0 )\";\r\n  };\r\n\r\n  /**\r\n   * Set/remove the loading body class to show or hide the loading indicator after pull down.\r\n   */\r\n  var _setBodyClass = function() {\r\n    if (pan.distance > 0) {\r\n      bodyClass.add(options.classNames.active);\r\n    } else {\r\n      bodyClass.remove(options.classNames.active);\r\n    }\r\n\r\n    if (pan.distance > options.distanceToRefresh) {\r\n      bodyClass.add(options.classNames.ready);\r\n    } else {\r\n      bodyClass.remove(options.classNames.ready);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Determine how to animate and position elements when the panend event fires.\r\n   *\r\n   * @param {object} e - Event object\r\n   */\r\n  var _panEnd = function(e) {\r\n    console.log(\"PAN END\");\r\n    if (!pan.enabled) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    options.contentEl.style.transform = options.contentEl.style.webkitTransform = \"\";\r\n    // options.ptrEl.style.transform = options.ptrEl.style.webkitTransform = \"\";\r\n\r\n    if (options.bodyEl.classList.contains(options.classNames.ready)) {\r\n      _doLoading();\r\n    } else {\r\n      _doReset();\r\n    }\r\n\r\n    pan.distance = 0;\r\n    pan.enabled = false;\r\n\r\n    options.progressCallback(\r\n      pan.distance / options.distanceToRefresh,\r\n      pan.distance\r\n\t);\r\n  };\r\n\r\n  /**\r\n   * Position content and refresh elements to show that loading is taking place.\r\n   */\r\n  var _doLoading = function() {\r\n\t  console.log(\"waiting added class\");\r\n    bodyClass.add(options.classNames.waiting);\r\n    bodyClass.remove(options.classNames.ready);\r\n\r\n    // If no valid loading function exists, just reset elements\r\n    if (!options.callback) {\r\n      return _doReset();\r\n    }\r\n\r\n    // The loading function should return a promise\r\n    var loadingPromise = options.callback();\r\n\r\n    // For UX continuity, make sure we show loading for at least one second before resetting\r\n    setTimeout(function() {\r\n      // Once actual loading is complete, reset pull to refresh\r\n      loadingPromise.then(_doReset);\r\n    }, 1000);\r\n  };\r\n\r\n  /**\r\n   * Reset all elements to their starting positions before any paning took place.\r\n   */\r\n  var _doReset = function() {\r\n    bodyClass.remove(options.classNames.waiting);\r\n    bodyClass.remove(options.classNames.ready);\r\n    bodyClass.add(options.classNames.resetting);\r\n    bodyClass.remove(options.classNames.active);\r\n\r\n    var bodyClassRemove = function() {\r\n      console.log(\"PTR CLEAN UP\");\r\n      bodyClass.remove(options.classNames.resetting);\r\n      options.bodyEl.removeEventListener(\r\n        \"transitionend\",\r\n        bodyClassRemove,\r\n        false\r\n      );\r\n    };\r\n\r\n    options.bodyEl.addEventListener(\"transitionend\", bodyClassRemove, false);\r\n  };\r\n\r\n  var _unload = function() {\r\n    // console.log(\"unload\");\r\n    h.destroy();\r\n    _doReset();\r\n  };\r\n\r\n  return {\r\n    init: init,\r\n    unload: _unload\r\n  };\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport WebPullToRefresh from \"./wptr\";\r\n\r\nexport interface IUsePullProps {\r\n  callback: () => Promise<void>;\r\n  distanceToRefresh?: number;\r\n  resistance?: number;\r\n  progressCallback?: (percentage: number, distance:number) => void;\r\n}\r\n\r\ninterface IPullWrapProps extends IUsePullProps {\r\n  children?: React.ReactChild[];\r\n}\r\n\r\nexport function usePull(props: IUsePullProps) {\r\n  const wrapper = useRef(null);\r\n  const indicator = useRef(null);\r\n  const content = useRef(null);\r\n\r\n  useEffect(() => {\r\n    var wpr = WebPullToRefresh();\r\n\r\n    wpr.init({\r\n      contentEl: content.current,\r\n      ptrEl: indicator.current,\r\n      bodyEl: wrapper.current,\r\n      ...props\r\n      // hammerOptions: this.props.hammerOptions || undefined\r\n    });\r\n\r\n    // todo: return cleanup\r\n    return () => {\r\n      wpr.unload();\r\n    };\r\n  }, []);\r\n\r\n  return { indicator, content, wrapper };\r\n}\r\n\r\nexport function PullWrap(props: IPullWrapProps) {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const progressCallback = (percentage: number, distance: number) => {\r\n    console.log(\"progress\", percentage, distance);\r\n    setProgress(percentage);\r\n  };\r\n\r\n  const { indicator, content, wrapper } = usePull(props);\r\n\r\n  return (\r\n    <div className=\"wrapper\" ref={wrapper}>\r\n      <div\r\n        className=\"ptr\"\r\n        ref={indicator}\r\n        style={{ color: \"black\", opacity: progress }}\r\n      >\r\n        <div className=\"refresher\">Refresh icon</div>\r\n      </div>\r\n      <div className=\"content\" ref={content}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { usePull } from \"components/usePull\";\r\n\r\nexport function Screen(props: any) {\r\n  \r\n  const cb = () => {\r\n    console.log(\"REFRESH!!!\");\r\n    return Promise.resolve();\r\n  };\r\n  \r\n  const progress = (p: number, d: number) => {\r\n    console.log(\"x\", p,d);\r\n    document.documentElement.style.setProperty(\"--pull-progress\", Math.min(1,p).toString());\r\n    document.documentElement.style.setProperty(\"--pull-distance\", d.toString());\r\n  };\r\n\r\n  const { indicator, content, wrapper } = usePull({\r\n    callback: cb,\r\n    progressCallback: progress\r\n  });\r\n\r\n  return (\r\n    <div className=\"screen\" ref={wrapper}>\r\n      <div ref={indicator} className=\"indicator\"></div>\r\n      <main ref={content} className=\"content\">\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Screen } from \"./screen\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPath } from \"features/nav/navSlice\";\r\nimport {PullWrap} from \"components/usePull\";\r\n/**\r\n *\r\n * Logo, intro\r\n * Pick name\r\n * Pick avatar\r\n * Invite friend\r\n *\r\n */\r\nexport function WelcomeWizard() {\r\n  var [name, setName] = useState(\"\");\r\n  var [isPlaying, setPlay] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const cb = () => Promise.resolve();\r\n\r\n  return (<Screen>\r\n    <h1 className=\"logo\">Duel World</h1>\r\n\r\n    <label>What should we call you?</label><br />\r\n    <input type=\"text\" placeholder=\"AndyPandy\" value={name} onChange={e => setName(e.target.value)} />\r\n    <br />\r\n    <button onClick={e => {\r\n      setPlay(true);\r\n      dispatch(setPath(\"duels\"));\r\n    }}>\r\n      Play\r\n      </button>\r\n  </Screen>);\r\n}\r\n","export default function classnames(obj: { [className:string]:any }){\r\n    return Object.entries(obj).map( ([k,v]) => v?k:'' ).join(' ');\r\n   }","import React, { useState } from \"react\";\r\nimport { IAlternative } from \"./roundSlice\";\r\nimport classnames from \"classNames\";\r\nimport posed from 'react-pose';\r\n\r\n\r\nexport interface IAlternativeProps {\r\n  text: string;\r\n  onClick?: (text: string) => void;\r\n  isMine?: boolean;\r\n  isCorrect?: boolean;\r\n}\r\n\r\n\r\nconst Box = posed.div({\r\n  enter: { opacity: 1, y:0},\r\n  exit: { opacity: 0, y:20},\r\n});\r\n\r\n\r\nexport default function Alternative(props: IAlternativeProps) {\r\n  const text = props.text;\r\n  \r\n  const onC = (e: any) => {\r\n    //props.setPath(e.target.innerText)\r\n    if (props.onClick) {\r\n      props.onClick(text);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Box  {...props} className={classnames({\"alternative\":true, \"isMine\": props.isMine, \"isCorrect\": props.isCorrect})} onClick={onC} key={text} >\r\n      {text}\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    useSelector as useReduxSelector,\r\n    TypedUseSelectorHook,\r\n  } from 'react-redux'\r\n  import { RootState } from './rootReducer'\r\n  \r\n  export const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector","import {Howl, Howler} from 'howler';\r\n\r\nimport beepMp3 from 'assets/button1.mp3'\r\nimport beep2Mp3 from 'assets/button2.mp3'\r\nimport tickHorrorMp3 from 'assets/tickHorror.mp3'\r\nimport bubbleNegativeMp3 from 'assets/bubbleNegative.mp3'\r\nimport errorbuzzMp3 from 'assets/errorbuzz.mp3'\r\nimport chimeMp3 from 'assets/chime.mp3'\r\n\r\nimport bubblesmp3 from 'assets/bubbles.mp3'\r\nimport fartmp3 from 'assets/fart.mp3'\r\nimport fart2mp3 from 'assets/fart2.mp3'\r\n\r\nexport const beep1 = new Howl({src: beepMp3});\r\nexport const beep2 = new Howl({src: beep2Mp3});\r\nexport const tickHorror = new Howl({src:tickHorrorMp3});\r\n\r\nexport const errorbuzz = new Howl({src:errorbuzzMp3});\r\nexport const popNegative = new Howl({src:bubbleNegativeMp3});\r\nexport const chime = new Howl({src:chimeMp3});\r\n\r\nexport const bubbles = new Howl({src:bubblesmp3, volume:0.04});\r\nexport const fart = new Howl({src:fartmp3});\r\nexport const fart2 = new Howl({src:fart2mp3});\r\n\r\n","import React from \"react\";\r\nimport {beep2} from \"features/sound\"\r\nimport classnames from \"classNames\";\r\n\r\nexport interface IButtonProps {\r\n    onClick: (e: React.MouseEvent) => void\r\n    children: any;\r\n    footer?:boolean;\r\n}\r\n\r\nexport default function Button (props: IButtonProps) {\r\n\r\n    const click = (e:React.MouseEvent) => {\r\n        beep2.play();\r\n        props.onClick(e);\r\n    }\r\n\r\n    return <button className={classnames({\"footer\":props.footer})} onClick={click}>{props.children}</button>\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Screen } from \"screen\";\r\nimport Alternative from \"features/questions/alternative\";\r\nimport { useSelector } from \"useSelector\";\r\nimport { setPath } from \"features/nav/navSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  IQuestion,\r\n  IAlternative,\r\n  answerQuestion,\r\n  startRound,\r\n  nextQuestion\r\n} from \"features/questions/roundSlice\";\r\nimport {\r\n  beep1,\r\n  beep2,\r\n  tickHorror,\r\n  popNegative,\r\n  errorbuzz\r\n} from \"features/sound\";\r\nimport Button from \"components/button\";\r\nimport posed, { PoseGroup } from \"react-pose\";\r\n\r\n/**\r\n *\r\n * Display questsions\r\n * Run timer\r\n * Report progress to get new current question\r\n *\r\n */\r\n\r\nconst Box = posed.div({\r\n  enter: { opacity: 1, y: 0, delay: 0, duration: 600, staggerChildren: 100 },\r\n  exit: { opacity: 0, y: 0 }\r\n});\r\n\r\nexport default function AnswerScreen(props: any) {\r\n  const round = useSelector(state => state.round);\r\n\r\n  const question: IQuestion = round.questions[round.currentQuestion];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const alternatives = question.alternatives;\r\n\r\n  const player = \"p1\";\r\n  const myAnswer =\r\n    round.answers[question.text] && round.answers[question.text][player]; // alt1\r\n  console.log(\"myanswer\", myAnswer, round.answers);\r\n\r\n  const answerHandler = (alternative: IAlternative) => {\r\n    console.log(\"Answered\", alternative);\r\n    dispatch(answerQuestion(alternative));\r\n  };\r\n\r\n  return (\r\n    <Screen>\r\n      <h1>{question.text}</h1>\r\n      <p>Your points: {round.myScore}</p>\r\n\r\n      <PoseGroup animateOnMount>\r\n        <Box className=\"alternatives\" key=\"container\">\r\n          {alternatives.map(x => {\r\n            const isCorrect = x.points > 0;\r\n            const mine = x.text == myAnswer;\r\n\r\n            // const players = round.answers[question.id].where(x => ); // answers { q1: a}\r\n            // return <Box key={\"x\"+x.text} > asdads </Box>}\r\n\r\n            return (\r\n              <Alternative\r\n                text={x.text}\r\n                isCorrect={isCorrect}\r\n                isMine={mine}\r\n                key={\"x\" + x.text}\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      </PoseGroup>\r\n      <Button onClick={() => dispatch(nextQuestion())}>Continue</Button>\r\n    </Screen>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Screen } from \"./screen\";\r\nimport Alternative from \"./features/questions/alternative\";\r\nimport { useSelector } from \"useSelector\";\r\nimport {setPath} from \"features/nav/navSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IQuestion, IAlternative, answerQuestion, startRound } from \"features/questions/roundSlice\";\r\nimport { beep1, beep2, tickHorror, popNegative, errorbuzz, chime } from \"features/sound\";\r\n\r\nfunction useInterval(callback:any, delay:number|null) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      // @ts-ignore\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nconst NO_ALTERNATIVE ={\r\n  text: \"\",\r\n  points:0\r\n};\r\n\r\n// const throttle = (func:any, limit:any) => {\r\n//   let lastFunc:any;\r\n//   let lastRan:any;\r\n//   return function() {\r\n//     // @ts-ignore\r\n//     const context:any = this;\r\n//     const args = arguments\r\n//     if (!lastRan) {\r\n//       func.apply(context, args)\r\n//       lastRan = Date.now()\r\n//     } else {\r\n//       clearTimeout(lastFunc)\r\n//       lastFunc = setTimeout(function() {\r\n//         if ((Date.now() - lastRan) >= limit) {\r\n//           func.apply(context, args)\r\n//           lastRan = Date.now()\r\n//         }\r\n//       }, limit - (Date.now() - lastRan))\r\n//     }\r\n//   }\r\n// }\r\n\r\n// @ts-ignore\r\nconst throttle = (func, limit) => {\r\n  // @ts-ignore\r\n  let inThrottle\r\n  return function() {\r\n    const args = arguments\r\n    // @ts-ignore\r\n    const context = this\r\n    // @ts-ignore\r\n    if (!inThrottle) {\r\n      func.apply(context, args)\r\n      inThrottle = true\r\n      setTimeout(() => inThrottle = false, limit)\r\n    }\r\n  }\r\n}\r\n\r\nvar beep = throttle(() => beep1.play(), 1000);\r\nvar horror = throttle(() => tickHorror.play(), 1000);\r\n\r\n\r\n/**\r\n * \r\n * Display questsions\r\n * Run timer\r\n * Report progress to get new current question\r\n * \r\n */\r\nexport default function QuestionScreen(props:any) {\r\n\r\n  const round = useSelector(state => state.round);\r\n  const question: IQuestion = round.questions[round.currentQuestion]\r\n\r\n  const dispatch = useDispatch()\r\n  let [seconds, setSeconds] = useState(10);\r\n  let delay = seconds < -1 ? null : 100;\r\n  \r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n    if(seconds <= 0) {\r\n      errorbuzz.play();\r\n      // if zero, play loose\r\n      dispatch(answerQuestion(NO_ALTERNATIVE));\r\n      // setSeconds(-1);\r\n      return;\r\n    }\r\n    else if (seconds <= 3) {\r\n      horror();\r\n    } else if(seconds) {\r\n      beep();\r\n    }\r\n    \r\n    let thisQ = question.text;\r\n    \r\n    setSeconds(seconds - .1);\r\n    \r\n    \r\n  }, delay);\r\n\r\n  const alternatives = question.alternatives;\r\n\r\n  const answerHandler = (alternative: IAlternative) => {\r\n    console.log(\"Answered\", alternative);\r\n    if(alternative.points < 1) {\r\n      popNegative.play();\r\n    } else {\r\n      chime.play();\r\n    }\r\n    dispatch(answerQuestion(alternative));\r\n    setSeconds(10);    \r\n  }\r\n\r\n  const ceilSeconds = Math.ceil(seconds);\r\n\r\n  return <Screen>\r\n    <h1>{question.text}</h1>\r\n    <p>&nbsp;</p>\r\n\r\n    <div className=\"alternatives\">\r\n      {alternatives.map(x => <Alternative text={x.text} onClick={(y:string) => answerHandler(x)} key={x.text} />)}\r\n    </div>\r\n\r\n    <div className=\"timerbar\" key={question.text}>\r\n      <div className=\"value\"><span className={ceilSeconds % 2 == 0 ? \"anim0\": \"\"}>{ceilSeconds}</span></div>\r\n    </div>\r\n  </Screen>;\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Screen } from \"screen\";\r\nimport Alternative from \"features/questions/alternative\";\r\nimport { useSelector } from \"useSelector\";\r\nimport { setPath } from \"features/nav/navSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  IQuestion,\r\n  IAlternative,\r\n  answerQuestion,\r\n  startRound\r\n} from \"features/questions/roundSlice\";\r\nimport QuestionScreen from \"QuestionScreen\";\r\nimport Button from \"components/button\";\r\nimport Confetti from \"react-confetti\";\r\nimport { chime, fart, bubbles, fart2 } from \"features/sound\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\n\r\n/**\r\n *\r\n * Display questsions\r\n * Run timer\r\n * Report progress to get new current question\r\n *\r\n */\r\n\r\nfunction getRandomInt(max: number) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport default function RoundScreen(props: any) {\r\n  const round = useSelector(state => state.round);\r\n  const dispatch = useDispatch();\r\n  const [xy, setxy] = useState([window.innerWidth / 2, window.innerHeight / 2]);\r\n  const [recycle, setrecycle] = useState(false);\r\n\r\n  const [debouncedCallback] = useDebouncedCallback(\r\n    // function\r\n    () => {\r\n      console.log(\"turning off\");\r\n      setrecycle(false);\r\n    },\r\n    // delay in ms\r\n    500\r\n  );\r\n\r\n  //   useEffect(() => {\r\n  //     const timer = setTimeout(() => {\r\n  //       console.log('This will run after 1 second!')\r\n  //       setrecycle(false);\r\n  //     }, 1000);\r\n  //     return () => clearTimeout(timer);\r\n  //   }, []);\r\n\r\n  if (round.status == \"not-started\") {\r\n    return (\r\n      <Screen>\r\n        <h1>Start the round!</h1>\r\n        <button\r\n          onClick={e => {\r\n            dispatch(setPath(\"question\"));\r\n            dispatch(startRound());\r\n          }}\r\n        >\r\n          Start!\r\n        </button>\r\n      </Screen>\r\n    );\r\n  }\r\n\r\n  const onC = (e: React.MouseEvent) => {\r\n    console.log(e.clientX, e.clientY);\r\n    setxy([e.clientX, e.clientY]);\r\n    setrecycle(true);\r\n    debouncedCallback();\r\n\r\n    if (getRandomInt(100) === 0) {\r\n      fart.play();\r\n    }\r\n    else if (getRandomInt(100) === 0) {\r\n      fart2.play();\r\n    } else {\r\n      bubbles.play();\r\n    }\r\n  };\r\n\r\n  if (round.status == \"finished\") {\r\n    return (\r\n      <div className=\"fullscreen\" onClick={onC}>\r\n        <Screen>\r\n          <Confetti\r\n            recycle={recycle}\r\n            tweenDuration={100}\r\n            numberOfPieces={200}\r\n            confettiSource={{\r\n              x: xy[0],\r\n              y: xy[1],\r\n              w: 50,\r\n              h: 10\r\n            }}\r\n          />\r\n          <h1>Your Score is {round.myScore}</h1>\r\n          <Button onClick={e => dispatch(startRound())}>Restart</Button>\r\n        </Screen>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <QuestionScreen />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Screen } from \"screen\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPath } from \"features/nav/navSlice\";\r\nimport Button from \"components/button\";\r\nimport { startRound } from \"features/questions/roundSlice\";\r\n\r\n\r\n/**\r\n *\r\n * Shows a list of your ongoing and historic duels\r\n * Create new duel\r\n * Quick play\r\n * Invite friend\r\n *\r\n */\r\nexport default function DuelsScreen() {\r\n  var [name, setName] = useState(\"\");\r\n  var [isPlaying, setPlay] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (<Screen>\r\n    <h1 className=\"logo\">Duels</h1>\r\n    <div>\r\n        <button onClick={() =>dispatch(setPath(\"newduel\"))}>Start new</button>\r\n\r\n        <h2>Current duels</h2>\r\n\r\n        <h2>History</h2>\r\n    </div>\r\n    <Button footer onClick={() => dispatch(setPath(\"round\"))}>Training mode</Button>\r\n  </Screen>);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Screen } from \"screen\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPath } from \"features/nav/navSlice\";\r\nimport Button from \"components/button\";\r\nimport { startRound } from \"features/questions/roundSlice\";\r\n\r\n\r\n/**\r\n *\r\n * Shows a list of your ongoing and historic duels\r\n * Create new duel\r\n * Quick play\r\n * Invite friend\r\n *\r\n */\r\n\r\n function webShare() {\r\n   // @ts-ignore\r\n   if (navigator.share) {\r\n   // @ts-ignore\r\n   navigator.share({\r\n        title: 'Duel World',\r\n        text: 'Join my quiz on Duel World',\r\n        url: 'https://abergs.github.io/duel-world',\r\n    })\r\n      .then(() => console.log('Successful share'))\r\n      .catch((error:any) => console.log('Error sharing', error));\r\n  }  \r\n }\r\n\r\nexport default function NewDuelScreen() {\r\n  var [name, setName] = useState(\"\");\r\n  var [isPlaying, setPlay] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (<Screen>\r\n    \r\n    <h1 className=\"logo\">Start a Duel</h1>\r\n    <div>\r\n        <input type=\"text\" placeholder=\"Search for player\" />\r\n        <h2>Friends</h2>\r\n    </div>\r\n    <Button footer onClick={() => dispatch(setPath(\"duels\"))}>Back</Button>\r\n  </Screen>);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { WelcomeWizard } from \"./WelcomeWizard\";\r\nimport QuestionScreen from \"./QuestionScreen\";\r\nimport AnswerScreen from \"./features/questions/answerScreen\";\r\nimport RoundScreen from \"features/questions/roundScreen\";\r\nimport DuelsScreen from \"features/duels/duelsScreen\";\r\n\r\nimport { useSelector } from \"useSelector\";\r\nimport {setPath} from \"features/nav/navSlice\";\r\nimport NewDuelScreen from \"features/duels/newDuelScreen\";\r\n/**\r\n * Switches between all the screens\r\n */\r\nexport function Game() {\r\n  const nav = useSelector(state => state.nav);\r\n\r\n  switch (nav.path) {\r\n    case \"init\": return <WelcomeWizard />;\r\n    case \"duels\": return <DuelsScreen />;\r\n    case \"newduel\": return <NewDuelScreen />\r\n    case \"round\":\r\n    case \"question\":\r\n    return <RoundScreen />;\r\n    case \"answer\": return <AnswerScreen />;\r\n    // case \"question\": return <QuestionScreen />;\r\n  }\r\n    \r\n  return <WelcomeWizard />\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Screen } from \"./screen\";\nimport \"./App.css\";\nimport { connect, useDispatch } from 'react-redux'\nimport { Game } from \"./Game\";\nimport {setPath} from \"features/nav/navSlice\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Game />\n      </header>\n    </div>\n  );\n}\n\n/**\n *\n * Logo, intro\n * Pick name\n * Pick avatar\n * Invite friend\n *\n */\n\nexport function WelcomeWizard() {\n  var [name, setName] = useState(\"\");\n  var [isPlaying, setPlay] = useState(false);\n  const dispatch = useDispatch();\n\n  return (\n    <Screen>\n      <h1 className=\"logo\">Duel World</h1>\n\n      <label>What should we call you?</label>\n      <input\n        type=\"text\"\n        placeholder=\"AndyPandy\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n\n      <button\n        onClick={e => {\n          setPlay(true);\n          dispatch(setPath(\"round\"));\n        }}\n      >\n        Play\n      </button>\n    </Screen>\n  );\n}\n\n/**\n *\n * Shows a list of your ongoing and historic duels\n * Create new duel\n * Invite friend\n *\n */\nfunction Duels() {}\n\n/**\n *\n * Shows top players\n * Show top friends-of-friends(?)\n *\n */\nfunction People() {}\n\n/** Shows rounds history(?) starts next round? */\nfunction Duel() {}\n\n/**\n *\n * Displays questions, shows progress, display effects\n * Track scores and bonuses\n *\n */\nfunction RoundPlay() {}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/button1.97aa97e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/button2.3dfc9042.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tickHorror.57aa7ab9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bubbleNegative.a992299e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/errorbuzz.20df5d64.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chime.6cbb16a2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bubbles.5e6c4969.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fart.c70c2022.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fart2.735ca49b.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux-starter-kit'\r\nimport navReducer from \"./features/nav/navSlice\";\r\nimport roundReducer from \"./features/questions/roundSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n    nav: navReducer,\r\n    round: roundReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer\r\n\r\n","import { configureStore } from 'redux-starter-kit'\r\n\r\nimport rootReducer from './rootReducer'\r\nimport { setPath } from 'features/nav/navSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n})\r\n\r\n// @ts-ignore\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n  // @ts-ignore\r\n    module.hot.accept('./rootReducer', () => {\r\n    const newRootReducer = require('./rootReducer').default\r\n    store.replaceReducer(newRootReducer)\r\n  })\r\n}\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store\r\n\r\n\r\nwindow.onpopstate = function(event:any) {\r\n  console.log(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state));\r\n  store.dispatch(setPath(event.state));\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\nlet vh = window.innerHeight * 0.01;\n// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n// We listen to the resize event\nwindow.addEventListener('resize', () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst render = () => {\n    const App = require('./App').default\n  \n    ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      document.getElementById('root')\n    )\n  }\n  \n  render()\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./App', render)\n  }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}